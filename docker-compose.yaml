# docker-compose.yaml
version: "3.4"
name: movies

services:
  db:
    image: mariadb:11.3.2
    container_name: movies-db-dev
    environment:
      # Estos valores se usan para crear la base de datos
      MYSQL_DATABASE: movies
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'rootpassword'
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - network1

  backend:
    image: movies-backend # Es buena práctica darle un nombre más descriptivo
    build: ./backend
    container_name: movies-api
    depends_on:
      db:
        condition: service_healthy
    networks:
      - network1
    # --- AÑADIDO IMPORTANTE ---
    # Variables para que tu aplicación backend sepa cómo conectarse a la DB.
    # El host 'db' es el nombre del servicio de la base de datos.
    environment:
      DB_HOST: 'db'
      DB_DATABASE: 'movies'
      DB_USER: 'user'
      DB_PASSWORD: 'password'
      # Asegúrate de que tu código backend (Java, Node, Python, etc.)
      # lea estas variables de entorno para configurar su conexión.

  frontend:
    build: ./frontend
    container_name: movies-frontend
    ports:
      - "1234:1234"
    volumes:
      # Monta tu código fuente...
      - ./frontend:/app
      # ...pero crea un volumen anónimo para node_modules,
      # preservando los del build y evitando que se sobrescriban.
      - /app/node_modules
    networks:
      - network1

networks:
  network1:
    driver: bridge